.MODEL SMALL
.STACK 64
.DATA
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	cat_W              equ 60
	cat_H              equ 31
	cat_img            DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 29, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 24, 17, 17
	                   DB  17, 17, 17, 17, 17, 17, 17, 17, 18, 26, 29, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 20, 23, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 22, 19, 224, 21, 30, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 25, 22, 25, 26, 28, 28
	                   DB  28, 28, 28, 28, 28, 28, 28, 27, 27, 26, 24, 21, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 26, 23, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 26, 21, 29, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 21, 26, 28, 28, 28, 28, 28
	                   DB  28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 24, 24, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 29, 26, 21, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 25, 23, 27, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 23, 24, 31, 31, 31, 31, 24, 227, 27, 27, 28, 28, 28, 28, 28
	                   DB  28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 22, 20, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 30, 24, 19, 20, 27, 30, 31, 31, 23, 19, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 235, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 18, 23, 23, 21, 24, 26, 31, 23, 19, 27, 28, 28, 28, 28, 28, 28
	                   DB  28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 19, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 30, 23, 23, 26, 22, 21, 21, 22, 19, 19, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 19, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 23, 23, 23, 24, 21, 19, 17, 19, 27, 28, 28, 28, 28, 28, 28
	                   DB  28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 22, 19, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 27, 23, 23, 21, 22, 26, 19, 19, 27, 28, 28, 28, 28, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 27, 28, 22, 19, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 29, 25, 24, 20, 18, 19, 27, 27, 27, 28, 88, 88, 88
	                   DB  28, 28, 28, 27, 27, 27, 27, 28, 28, 27, 88, 88, 22, 19, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 20, 20, 19, 20, 24, 24, 27, 88, 63, 26, 26, 27, 27, 21, 23, 23, 24, 27, 26, 26, 63, 88, 22, 19, 30, 30, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 20, 24, 23, 27, 27, 27, 25
	                   DB  20, 24, 27, 25, 22, 23, 26, 26, 21, 23, 27, 27, 22, 227, 24, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27, 20, 24, 23, 27, 28, 28, 28, 21, 23, 28, 28, 26, 27, 27, 28, 25, 23, 27, 24, 24, 29, 29, 30, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 21, 20, 18, 18, 19, 24, 27, 28, 28
	                   DB  27, 27, 28, 28, 28, 28, 28, 28, 27, 27, 27, 24, 24, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 27, 26, 24, 23, 21, 26, 28, 28, 28, 27, 27, 27, 27, 27, 27, 28, 28, 28, 27, 24, 22, 24, 26, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 28, 22, 20, 18, 24, 28, 28
	                   DB  28, 26, 24, 25, 24, 26, 25, 28, 28, 28, 25, 21, 28, 29, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 29, 26, 23, 27, 28, 27, 24, 18, 18, 18, 18, 22, 27, 28, 27, 25, 21, 30, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 29, 23, 22, 28
	                   DB  24, 21, 26, 26, 26, 26, 23, 22, 27, 24, 21, 27, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 24, 224, 27, 22, 20, 31, 31, 31, 31, 23, 19, 27, 22, 19, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 27, 18
	                   DB  24, 30, 31, 31, 31, 31, 24, 17, 18, 24, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 30, 25, 28, 31, 31, 31, 31, 31, 28, 25, 25, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
	                   DB  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
​
​
​                                                                                                                                                                                     		;;Cat Moving Variables
​ xCoord dw ?
	yCoord             dw  ?
	;;Gravity Variables
	GravityRange       dw  ?
	LandLine           dw  142d
	GravityAccleration dw  1d
	isFalling          dw  0                                                                                                                                                              	;detect if the player is falling or not

.CODE
MAIN PROC FAR
	                 MOV  AX,@data
	                 MOV  DS,AX
	                 mov  ah,0
	                 mov  al,13h
	                 int  10h
	;;Draw Color Background

	;;;;;;;;;;;;;;;;;;;;;;;;;;;
	                 call DrawBackGround
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CatDrawing:      
	                 mov  BX , 20
	                 mov  xCoord , BX
	                 mov  yCoord , BX
	                 call DrawCat
					 call CharacterGravity


	CHECK:           mov  ah,1
	                 int  16h
	                 jz   CHECK


	                 cmp  ah,72
	                 jz   MoveUp

	                 cmp  ah,80
	                 jz   MoveDown

	                 cmp  ah,75
	                 jz   MoveLeft

	                 cmp  ah,77
	                 jz   MoveRight

					 cmp al, 32
					 jz JUMPUP

	ReadKey:         
	                 mov  ah,0
	                 int  16h
	                 call DrawBackGround
	                 call DrawCat
					 call CharacterGravity
					 call delay
	                 jmp  CHECK

	MoveUp:          
	          
	                 sub  yCoord,15
	                 jmp  ReadKey

	MoveDown:        
	          
	                 ;;add  yCoord , 4
	                 jmp  ReadKey

	MoveLeft:        
	          
	                 sub  xCoord,6
	                 jmp  ReadKey

	MoveRight:       
	                 add  xCoord , 6
	                 jmp  ReadKey
	JUMPUP:
                    sub yCoord , 46
                    jmp ReadKey
	ENDING:          
MAIN ENDP

DrawBackGround proc
	                 MOV  CX ,0
	                 MOV  DX ,0
	                 MOV  AL,0Bh
	                 MOV  AH,0Ch
	FILL:            INT  10h
	                 INC  CX
	                 CMP  CX,320
	                 JNZ  FILL
	                 INC  DX
	                 MOV  CX,0
	                 CMP  DX,140
	                 JNZ  FILL
	                 JMP  LINEDRAWING
	;;DRAW LINE BETWEEN GROUND AND SKY
	LINEDRAWING:     
	                 MOV  CX ,0
	                 MOV  DX ,140
	                 MOV  AL,02h
	                 MOV  AH,0Ch
	FILL3:           INT  10h
	                 INC  CX
	                 CMP  CX,320
	                 JNZ  FILL3
	                 INC  DX
	                 MOV  CX,0
	                 CMP  DX,146
	                 JNZ  FILL3
	;Drawing Steps
	STEP1: ;first step on the left
                mov dx, 106
        Start1:  mov cx, 50
                mov al, 6
                mov ah, 0Ch
        StepDraw1: int 10h
                inc cx
                cmp cx, 125
                jnz StepDraw1
                DEC dx
                cmp dx, 102
                jnz Start1
    STEP2: ;second step on the right
                mov dx, 106
        Start2:  mov cx, 200
                mov al, 6
                mov ah, 0Ch
        StepDraw2: int 10h
                inc cx
                cmp cx, 275
                jnz StepDraw2
                DEC dx
                cmp dx, 102
                jnz Start2

    STEP3: ;Top Step
                mov dx, 70
        Start3:  mov cx, 115
                mov al, 6
                mov ah, 0Ch
        StepDraw3: int 10h
                inc cx
                cmp cx, 210
                jnz StepDraw3
                DEC dx
                cmp dx, 66
                jnz Start3
	;;;Draw Bottom of the image
	SCREENBOTTOM:    
	                 MOV  CX ,0
	                 MOV  DX ,146
	                 MOV  AL,05h
	                 MOV  AH,0Ch
	FILL2:           INT  10h
	                 INC  CX
	                 CMP  CX,320
	                 JNZ  FILL2
	                 JMP  CHANGECOLOR
	CONTINUE:        
	                 INC  DX
	                 MOV  CX,0
	                 CMP  DX,165
	                 JNZ  FILL2
	                 ret
	CHANGECOLOR:     
	                 CMP  AL,05
	                 JZ   COLORBROWN
	                 JMP  COLORBLACK
	COLORBROWN:      
	                 MOV  AL,07H
	                 JMP  CONTINUE
	COLORBLACK:      
	                 MOV  AL,05
	                 JMP  CONTINUE
	                 JMP  FILL2
DrawBackGround Endp

DrawCat proc
	                 push ax
	                 MOV  AH,0Bh
	                 MOV  CX, cat_W
	                 MOV  DX, cat_H
	                 mov  DI, offset cat_img
	                 jmp  Startcat
	Drawct:          
	                 MOV  AH,0Ch
	                 mov  al, [DI]
	                 CMP  al,31
	                 JZ   Startcat
	                 MOV  BH,00h
	                 add  cx,xCoord
	                 add  dx,yCoord
	                 INT  10h
	                 sub  cx , xCoord
	                 sub  dx , yCoord
	Startcat:        
	                 inc  DI
	                 DEC  Cx
	                 JNZ  Drawct
	                 mov  Cx, cat_W
	                 DEC  DX
	                 JZ   ENDINGcat
	                 Jmp  Drawct

	ENDINGcat:       
	                 pop  ax
	                 ret
DrawCat Endp

delay proc
	                 mov  di,00FFFH
	LOP1:            MOV  CX,1000
	LOP2:            LOOP LOP2
	                 DEC  DI
	                 JNZ  LOP1
	                 ret
delay Endp


CharacterGravity proc

	MOVINGPLAYERDOWN:
					
	                 MOV  AX , GravityAccleration
	                 ADD  yCoord , AX				;;Add the garvity value yCoordinate of the character
	                 MOV  AX , yCoord
	                 ADD  AX , cat_H				;;add the ycoord and the height of character to AX to check
	                 CMP  AX,LandLine               ;;if they are greater or equal to the landline (ground)
	                 Jge   ENDMOVING
					 call DrawBackGround            ;;Remove the old position
					 call DrawCat                   ;;Draw with new onw
					 jmp MOVINGPLAYERDOWN

ENDMOVING:
					 MOV  AX , GravityAccleration
	                 SUB  yCoord , AX
	                 ret
CharacterGravity Endp




END MAIN